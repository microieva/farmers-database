{"version":3,"sources":["js/reducers/reducers.js","js/constants/action-types.js","js/store/store.js","js/actions/actions.js","js/components/List.js","js/components/Form.js","js/components/Farmer.js","js/components/SearchBar.js","js/components/App.js","index.js"],"names":["initialState","farmers","searchWord","selectedFarmer","filteredFarmers","reducers","state","action","type","payload","store","createStore","selectFarmer","farmer","console","log","name","searchFarmers","List","connect","dispatch","bindActionCreators","filter","toLowerCase","indexOf","map","key","id","onClick","ConnectedForm","phoneNumber","gender","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","uuidv1","props","addFarmer","onSubmit","className","htmlFor","placeholder","onChange","checked","Component","Form","ConnectedFarmerDetails","Farmer","SearchBar","onClickHandler","e","require","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cfb6968.chunk.js","sourcesContent":["import { ADD_FARMER } from \"../constants/action-types\";\nimport { SELECT_FARMER } from \"../constants/action-types\";\nimport { SEARCH_FARMERS } from \"../constants/action-types\";\n\n\n/*const reducers = combineReducers({\n    farmers: addFarmer,\n    activeFarmer: selectFarmer,\n    searchFarmers: searchFarmers\n});\n\nexport default reducers;*/\n\n\nconst initialState = {\n    farmers: [],\n    searchWord: '',\n    selectedFarmer: null,\n    filteredFarmers: []\n};\n\nconst reducers = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FARMER:\n            return { ...state, farmers: [...state.farmers, action.payload] };\n\n        case SELECT_FARMER: \n            return { ...state, selectedFarmer: action.payload };\n        \n        case SEARCH_FARMERS: \n            return {...state, searchWord: action.payload };\n        \n        default:\n            return state;\n    }\n\n};\n\nexport default reducers;\n\n","export const ADD_FARMER = \"ADD_FARMER\";\nexport const SELECT_FARMER = \"SELECT_FARMER\";\nexport const SEARCH_FARMERS = \"SEARCH_FARMERS\";","import { createStore } from \"redux\";\nimport reducers from \"../reducers/reducers\";\n\nconst store = createStore(reducers);\n\nexport default store;","import { ADD_FARMER } from \"../constants/action-types\";\nimport { SELECT_FARMER } from \"../constants/action-types\";\nimport { SEARCH_FARMERS } from \"../constants/action-types\";\n\nexport const addFarmer = (farmer) => { \n    console.log(\"name added: \", farmer.name, farmer.phoneNumber, farmer.gender);\n    return {\n        type: ADD_FARMER, \n        payload: farmer \n    }\n};\n\nexport const selectFarmer = (farmer) => {\n    console.log(\"you clicked farmer: \", farmer.name);\n    return {\n        type: SELECT_FARMER,\n        payload: farmer\n    }\n};\n\nexport const searchFarmers = (searchWord =\"\") => {\n    console.log(\"searchFarmers action\");\n    return {\n        type: SEARCH_FARMERS,\n        payload: searchWord\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { selectFarmer } from \"../actions/actions\";\n\nconst ConnectedList = ({ farmers, searchWord, selectFarmer }) => (\n  \n    <div>\n      <ul>\n        {farmers\n          .filter(farmer => \n            farmer.name.toLowerCase().indexOf(searchWord.toLowerCase()) >=0)\n\n          .map(farmer => (\n            <li key={farmer.id}\n              onClick={()=> selectFarmer(farmer)}>\n              {farmer.name}\n            </li>\n        ))}\n      </ul> \n    </div>\n);\n\n\nconst matchDispatchToProps = dispatch => {\n  return bindActionCreators({ selectFarmer: selectFarmer }, dispatch)\n};\n\nconst mapStateToProps = state => {\n  return { farmers: state.farmers, searchWord: state.searchWord }\n};\n\nconst List = connect(mapStateToProps, matchDispatchToProps)(ConnectedList);\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addFarmer } from \"../actions/actions\";\n\n\nclass ConnectedForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            phoneNumber: \"\",\n            gender: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n      this.setState({\n          [event.target.id]: event.target.value\n      });\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n      const { name, phoneNumber, gender } = this.state;\n      const id = uuidv1();\n      this.props.addFarmer({ name, phoneNumber, gender, id });\n      this.setState({ \n          name: \"\" , \n          phoneNumber: \"\",\n          gender: null\n      });\n  }\n\n  render() {\n      const { name, phoneNumber, gender } = this.state;\n\n      return (\n          <form onSubmit={this.handleSubmit}>\n              <div className=\"\">\n                  <label htmlFor=\"name\">Name:</label>\n                  <input\n                    placeholder=\"Add Name...\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}\n                  />\n\n                  <label htmlFor=\"phoneNumber\">Phone Number:</label>\n                  <input\n                    placeholder=\"Add Phone Number...\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"phoneNumber\"\n                    value={phoneNumber}\n                    onChange={this.handleChange} \n                  />\n\n                  <label htmlFor=\"gender\">Gender: </label>\n                  <input \n                    type=\"checkbox\"\n                    value=\"Female\"\n                    id=\"female\"\n                    checked={gender === \"Female\"}\n                    onChange={this.handleChange} \n                  />Female  \n                  <input \n                    type=\"checkbox\"\n                    value=\"Male\"\n                    id=\"male\"\n                    checked={gender === \"Male\"}\n                    onChange={this.handleChange} \n                  />Male\n          \n              </div>\n              <button type=\"submit\" className=\"button\">\n                Save\n              </button>\n          </form>\n      );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addFarmer: farmer => dispatch(addFarmer(farmer))\n    };\n};\n\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ConnectedFarmerDetails extends Component {\n\n    render () {\n        //console.log(\"FarmerDetails this.props\", this.props);\n\n        if (!this.props.farmer) {\n            return (<h4>Select Farmer...</h4>);\n        }\n        return (\n            <div className=\"\">\n                <h4>Name: {this.props.farmer.name}</h4>\n                <h4>Phone Number: {this.props.farmer.phoneNumber}</h4>\n                <h4>Gender: {this.props.farmer.gender}</h4>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = state => {\n  return { farmer: state.selectedFarmer };\n};\n\n\nconst Farmer = connect(mapStateToProps, null)(ConnectedFarmerDetails);\n\nexport default Farmer;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { searchFarmers } from \"../actions/actions\";\n//import PropTypes from \"prop-types\";\n\n\nclass SearchBar extends Component {\n    constructor () {\n        super();\n        this.state = {\n            searchWord: \"\"\n        };\n\n        this.onClickHandler = this.onClickHandler.bind(this);\n    }\n\n    onClickHandler(e){\n        e.preventDefault();\n        this.props.searchFarmers(this.state.searchWord);\n        this.setState(()=>({searchWord:\"\"}));\n        \n    }\n\n    render() {\n        return (\n            <form>\n                <div>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search Name...\"      \n                        onChange={e => this.props.searchFarmers(e.target.value)} />\n                    <div>\n                        <button\n                            onClick={this.onClickHandler}>Back to List\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps= state => {\n    return { searchWord: state.searchWord }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({searchFarmers: searchFarmers}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Farmer from \"./Farmer\";\nimport SearchBar from \"./SearchBar\";\nrequire(\"../../styles/styles.css\");\n\n\nconst App = () => (\n  \n    <table>\n      <tbody>\n        <tr>\n          <td>\n            <div className=\"\">\n              <h2>Add New Farmer</h2>\n              <hr/>\n              <Form />\n            </div>\n          </td>\n          <td>\n            <div className=\"list\">\n              <h2>All Farmers:</h2>\n              <hr/>\n              <List />\n            </div>\n          </td> \n        </tr>\n        <tr>\n          <td>\n            <div className=\"search\">\n              <h2>Search Farmers</h2>\n              <hr/>\n              <SearchBar />\n            </div>\n          </td>\n          <td>\n            <div className=\"details\">\n              <h2>Farmer Details:</h2>\n              <hr/>\n              <Farmer />\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>    \n);\n \nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/store\";\nimport App from \"./js/components/App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}